/*!
 * docker-registry-ui
 * Copyright (C) 2016  Jones Magloire @Joxit
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
riot.tag2("add",'<dialog id="add-server-dialog" class="mdl-dialog"> <h4 class="mdl-dialog__title">Add your Server ?</h4> <div class="mdl-dialog__content"> <div class="mdl-textfield mdl-js-textfield"> <input class="mdl-textfield__input" type="text" id="add-server-input"> <label class="mdl-textfield__label" for="add-server-input">Server url</label> </div> </div> <div class="mdl-dialog__actions"> <button type="button" class="mdl-button change" onclick="registryUI.addTag.add();">Add</button> <button type="button" class="mdl-button close" onclick="registryUI.addTag.close();">Cancel</button> </div> </dialog>',"","",function(e){registryUI.addTag=registryUI.addTag||{},registryUI.addTag.update=this.update,this.on("updated",function(){componentHandler.upgradeElements(this["add-server-dialog"]),registryUI.addTag.dialog=registryUI.addTag.dialog||document.querySelector("#add-server-dialog"),registryUI.addTag.addServer=registryUI.addTag.tileServerList||registryUI.addTag.dialog.querySelector("#add-server-input"),registryUI.addTag.dialog.showModal||dialogPolyfill.registerDialog(registryUI.addTag.dialog),this["add-server-input"].onkeyup=function(e){13==e.keyCode&&registryUI.addTag.add()}}),registryUI.addTag.show=function(){registryUI.addTag.dialog.showModal()},registryUI.addTag.add=function(){registryUI.addTag.addServer.value&&registryUI.addTag.addServer.value.length>0&&registryUI.addServer(registryUI.addTag.addServer.value),registryUI.addTag.addServer.value="",rg.router.go("home"),registryUI.addTag.dialog.close()},registryUI.addTag.close=function(){registryUI.addTag.addServer.value="",registryUI.addTag.dialog.close()},registryUI.addTag.update()}),riot.tag2("app","<catalog if=\"{!rg.router.current || rg.router.current.name == 'home'}\"></catalog> <taglist if=\"{rg.router.current.name == 'taglist'}\"></taglist>","","",function(e){this.mixin("rg.router"),this.router.add({name:"home",url:""}),this.router.add({name:"taglist",url:"/taglist/:repository/:image"}),this.router.on("go",(e=>{switch(e.name){case"taglist":registryUI.taglist.display&&(registryUI.taglist.loadend=!1,registryUI.taglist.display());break;case"home":registryUI.catalog.display&&(registryUI.catalog.loadend=!1,registryUI.catalog.display())}})),this.router.start()}),riot.tag2("catalog",'<div id="catalog-tag" class="catalog"> <div class="section-centerd mdl-card mdl-shadow--2dp mdl-cell--6-col"> <div class="mdl-card__title"> <h2 class="mdl-card__title-text">Repositories of {registryUI.url()}</h2> </div> <div id="catalog-spinner" hide="{registryUI.catalog.loadend}" class="mdl-spinner mdl-js-spinner is-active section-centerd"></div> <ul class="mdl-list" show="{registryUI.catalog.loadend}"> <li class="mdl-list__item mdl-menu__item" style="opacity: 1;" each="{item in registryUI.catalog.repositories}" onclick="registryUI.catalog.go(\'{item}\');"> <span class="mdl-list__item-primary-content"> <i class="material-icons mdl-list__item-icon">send</i> {item} </span> </li> </ul> </div> <div id="error-snackbar" aria-live="assertive" aria-atomic="true" aria-relevant="text" class="mdl-js-snackbar mdl-snackbar"> <div class="mdl-snackbar__text"></div> <button class="mdl-snackbar__action" type="button"></button> </div> </div>',"","",function(e){registryUI.catalog.instance=this,this.mixin("rg.router"),registryUI.catalog.display=function(){var e=new Http;registryUI.catalog.createSnackbar=function(e){var t=document.querySelector("#error-snackbar");registryUI.catalog.error=e;var r={message:registryUI.catalog.error,timeout:1e5,actionHandler:function(){t.classList.remove("mdl-snackbar--active")},actionText:"Undo"};t.MaterialSnackbar.showSnackbar(r)},e.addEventListener("load",function(){200==this.status?(registryUI.catalog.repositories=JSON.parse(this.responseText).repositories||[],registryUI.catalog.repositories.sort()):404==this.status?registryUI.catalog.createSnackbar("Server not found"):registryUI.catalog.createSnackbar(this.responseText)}),e.addEventListener("error",function(){registryUI.catalog.createSnackbar("An error occured")}),e.addEventListener("loadend",function(){registryUI.catalog.loadend=!0,registryUI.catalog.instance.update()}),e.open("GET",registryUI.url()+"/v2/_catalog"),e.send()},this.on("updated",function(){componentHandler.upgradeElements(this["catalog-tag"])}),registryUI.catalog.go=function(e){rg.router.go("taglist",{repository:e.split("/")[0],image:e.split("/")[1]})},registryUI.catalog.display()}),riot.tag2("change",'<dialog id="change-server-dialog" class="mdl-dialog"> <h4 class="mdl-dialog__title">Change your Server ?</h4> <div class="mdl-dialog__content"> <div class="mdl-textfield mdl-js-textfield"> <select class="mdl-textfield__input mdl-textfield__select" name="server-list" id="server-list"> <option each="{url in registryUI.getRegistryServer()}" value="{url}">{url}</option> </select> </div> </div> <div class="mdl-dialog__actions"> <button type="button" class="mdl-button change" onclick="registryUI.changeTag.change();">Change</button> <button type="button" class="mdl-button close" onclick="registryUI.changeTag.close();">Cancel</button> </div> </dialog>',"","",function(e){registryUI.changeTag=registryUI.changeTag||{},registryUI.changeTag.update=this.update,this.on("updated",function(){componentHandler.upgradeElements(this["change-server-dialog"]),registryUI.changeTag.dialog=registryUI.changeTag.dialog||document.querySelector("#change-server-dialog"),registryUI.changeTag.serverList=registryUI.changeTag.serverList||registryUI.changeTag.dialog.querySelector("#server-list"),registryUI.changeTag.dialog.showModal||dialogPolyfill.registerDialog(registryUI.changeTag.dialog),this["server-list"].onkeyup=function(e){13==e.keyCode&&registryUI.changeTag.change()}}),registryUI.changeTag.show=function(){registryUI.changeTag.update(),registryUI.changeTag.serverList.value=registryUI.url(),registryUI.changeTag.dialog.showModal()},registryUI.changeTag.change=function(){registryUI.changeTag.serverList.value&&registryUI.changeTag.serverList.value.length>0&&registryUI.changeServer(registryUI.changeTag.serverList.value),registryUI.changeTag.serverList.value="",rg.router.go("home"),registryUI.changeTag.dialog.close()},registryUI.changeTag.close=function(){registryUI.changeTag.dialog.close()}}),riot.tag2("menu",'<div id="card-menu" class="mdl-card__menu"> <button id="registry-menu" name="registry-menu" class="mdl-button mdl-button--icon mdl-js-button mdl-js-ripple-effect"> <i class="material-icons">more_vert</i> </button> <ul class="mdl-menu mdl-menu--bottom-right mdl-js-menu mdl-js-ripple-effect" for="registry-menu"> <li class="mdl-menu__item" onclick="registryUI.addTag.show();">Add URL</li> <li class="mdl-menu__item" onclick="registryUI.changeTag.show();">Change URL</li> <li class="mdl-menu__item" onclick="registryUI.removeTag.show();">Remove URL</li> </ul> </div>',"","",function(e){registryUI.menuTag=registryUI.menuTag||{},registryUI.menuTag.update=this.update,this.on("updated",function(){componentHandler.upgradeElements(this["card-menu"])}),registryUI.menuTag.update()}),riot.tag2("remove-image",'<a href="#" onclick="registryUI.removeImage.remove(\'{opts.name}\', \'{opts.tag}\')"> <i class="material-icons mdl-list__item-icon">delete</i> </a>',"","",function(e){registryUI.removeImage=registryUI.removeImage||{},registryUI.removeImage.update=this.update,registryUI.removeImage.remove=function(e,t){var r=new Http;r.addEventListener("load",function(){if(registryUI.taglist.refresh(),200==this.status){if(!this.getAllResponseHeaders().includes("Docker-Content-Digest"))return void registryUI.taglist.createSnackbar("You need tu add Access-Control-Expose-Headers: ['Docker-Content-Digest'] in your server configuration.");var r=this.getResponseHeader("Docker-Content-Digest"),a=new Http;a.addEventListener("load",function(){200==this.status||202==this.status?(registryUI.taglist.refresh(),registryUI.taglist.createSnackbar("Deleting "+e+":"+t+" image. Run `registry garbage-collect config.yml` on your registry")):404==this.status?registryUI.taglist.createSnackbar("Digest not found"):registryUI.taglist.createSnackbar(this.responseText)}),a.open("DELETE",registryUI.url()+"/v2/"+e+"/manifests/"+r),a.setRequestHeader("Accept","application/vnd.docker.distribution.manifest.v2+json"),a.addEventListener("error",function(){registryUI.taglist.createSnackbar("An error occurred when deleting image. Check if your server accept DELETE methods Access-Control-Allow-Methods: ['DELETE'].")}),a.send()}else 404==this.status?registryUI.taglist.createSnackbar("Manifest for"+e+":"+t+"not found"):registryUI.taglist.createSnackbar(this.responseText)}),r.open("HEAD",registryUI.url()+"/v2/"+e+"/manifests/"+t),r.setRequestHeader("Accept","application/vnd.docker.distribution.manifest.v2+json"),r.send()}}),riot.tag2("remove",'<dialog id="remove-server-dialog" class="mdl-dialog"> <h4 class="mdl-dialog__title">Remove your Registry Server ?</h4> <div class="mdl-dialog__content"> <div class="mdl-textfield mdl-js-textfield"> <ul class="mdl-list"> <li class="mdl-list__item" each="{url in registryUI.getRegistryServer()}"> <span class="mdl-list__item-primary-content"> <a href="#" onclick="registryUI.removeTag.removeUrl(\'{url}\');"> <i class="material-icons mdl-list__item-icon">delete</i> </a> <span class="url">{url}</span> </span> </li> </ul> </div> </div> <div class="mdl-dialog__actions"> <button type="button" class="mdl-button close" onclick="registryUI.removeTag.close();">Close</button> </div> </dialog>',"","",function(e){registryUI.removeTag=registryUI.removeTag||{},registryUI.removeTag.update=this.update,registryUI.removeTag.removeUrl=function(e){registryUI.removeServer(e),registryUI.removeTag.update()},registryUI.removeTag.close=function(){registryUI.removeTag.dialog.close(),registryUI.removeTag.update()},registryUI.removeTag.show=function(){registryUI.removeTag.update(),registryUI.removeTag.dialog.showModal()},this.on("updated",function(){registryUI.removeTag.dialog=this["remove-server-dialog"],registryUI.removeTag.dialog.showModal||dialogPolyfill.registerDialog(registryUI.removeTag.dialog)})}),riot.tag2("taglist",'<div id="taglist-tag" class="taglist"> <div class="section-centerd mdl-card mdl-shadow--2dp mdl-cell--6-col"> <div class="mdl-card__title"> <a href="#" onclick="registryUI.taglist.back();"> <i class="material-icons mdl-list__item-icon">arrow_back</i> </a> <h2 class="mdl-card__title-text">Tags of {registryUI.url() + \'/\' + registryUI.taglist.name}</h2> </div> <div id="taglist-spinner" hide="{registryUI.taglist.loadend}" class="mdl-spinner mdl-js-spinner section-centerd is-active"></div> <table class="mdl-data-table mdl-js-data-table full-table" show="{registryUI.taglist.loadend}" style="border: none;"> <thead> <tr> <th class="mdl-data-table__cell--non-numeric">Repository</th> <th class="{registryUI.taglist.asc ? \'mdl-data-table__header--sorted-ascending\' : \'mdl-data-table__header--sorted-descending\'}" onclick="registryUI.taglist.reverse();">Tag</th> <th show="{registryUI.isImageRemoveActivated}"></th> </tr> </thead> <tbody> <tr each="{item in registryUI.taglist.tags}"> <td class="mdl-data-table__cell--non-numeric">{registryUI.taglist.name}</td> <td>{item}</td> <td show="{registryUI.isImageRemoveActivated}"> <remove-image name="{registryUI.taglist.name}" tag="{item}"></remove-image> </td> </tr> </tbody> </table> </div> <div id="error-snackbar" aria-live="assertive" aria-atomic="true" aria-relevant="text" class="mdl-js-snackbar mdl-snackbar"> <div class="mdl-snackbar__text"></div> <button class="mdl-snackbar__action" type="button"></button> </div> </div>',"","",function(e){registryUI.taglist.instance=this,registryUI.taglist.display=function(){if(rg.router.current&&"taglist"==rg.router.current.name){name=rg.router.current.params.repository+(rg.router.current.params.image?"/"+rg.router.current.params.image:"");var e=new Http;registryUI.taglist.name=name,registryUI.taglist.instance.update(),registryUI.taglist.createSnackbar=function(e){var t=document.querySelector("#error-snackbar");registryUI.taglist.error=e;var r={message:registryUI.taglist.error,timeout:1e5,actionHandler:function(){t.classList.remove("mdl-snackbar--active")},actionText:"Undo"};t.MaterialSnackbar.showSnackbar(r)},e.addEventListener("load",function(){200==this.status?(registryUI.taglist.tags=JSON.parse(this.responseText).tags||[],registryUI.taglist.tags.sort()):404==this.status?registryUI.taglist.createSnackbar("Server not found"):registryUI.taglist.createSnackbar(this.responseText)}),e.addEventListener("error",function(){registryUI.taglist.createSnackbar("An error occured")}),e.addEventListener("loadend",function(){registryUI.taglist.loadend=!0,registryUI.taglist.instance.update()}),e.open("GET",registryUI.url()+"/v2/"+name+"/tags/list"),e.send(),registryUI.taglist.asc=!0}},registryUI.taglist.display(),registryUI.taglist.instance.update(),this.on("updated",function(){componentHandler.upgradeElements(this["taglist-tag"])}),registryUI.taglist.reverse=function(){registryUI.taglist.asc?(registryUI.taglist.tags.reverse(),registryUI.taglist.asc=!1):(registryUI.taglist.tags.sort(),registryUI.taglist.asc=!0),registryUI.taglist.instance.update()},registryUI.taglist.back=function(){rg.router.go("home")},registryUI.taglist.refresh=function(){rg.router.go(rg.router.current.name,rg.router.current.params)}});